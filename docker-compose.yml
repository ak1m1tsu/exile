version: '3'

networks:
  worknet:
    driver: bridge

volumes:
  pg-data:
    driver: local
  redis-data:
    driver: local

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./build/api/Dockerfile
    restart: always
    depends_on:
      - postgres
      - broker
      - redis
    ports:
      - "${API_PORT}:${API_PORT}"
    networks:
      - worknet
    environment:
      ENV: ${API_ENV}
      PORT: ${API_PORT}
      IDLE_TIMEOUT: ${API_IDLE_TIMEOUT}
      READ_TIMEOUT: ${API_READ_TIMEOUT}
      WRITE_TIMEOUT: ${API_WRITE_TIMEOUT}
      DATABASE_URL: ${DATABASE_URL}
      CACHE_URL: ${CACHE_URL}
      KAFKA_BOOTSTRAP_SERVERS: ${API_KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_PRODUCER_TOPIC: ${API_KAFKA_PRODUCER_TOPIC}
  service:
    container_name: service
    build:
      context: .
      dockerfile: ./build/service/Dockerfile
    restart: always
    depends_on:
      - broker
      - postgres
    networks:
      - worknet
    environment:
      ENV: ${SERVICE_ENV}
      DATABASE_URL: ${DATABASE_URL}
      CACHE_URL: ${CACHE_URL}
      KAFKA_GROUP_ID: ${SERVICE_KAFKA_GROUP_ID}
      KAFKA_BOOTSTRAP_SERVERS: ${SERVICE_KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_AUTO_OFFSET_RESET: ${SERVICE_KAFKA_AUTO_OFFSET_RESET}
      KAFKA_PRODUCER_TOPIC: ${SERVICE_KAFKA_PRODUCER_TOPIC}
      KAFKA_CONSUMER_TOPICS: ${SERVICE_KAFKA_CONSUMER_TOPICS}
      KAFKA_TIMEOUT: ${SERVICE_KAFKA_TIMEOUT}
  broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: broker
    ports:
      - "9092"
    networks:
      - worknet
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: ${KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS}
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: ${KAFKA_TRANSACTION_STATE_LOG_MIN_ISR}
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: ${KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR}
      KAFKA_PROCESS_ROLES: ${KAFKA_PROCESS_ROLES}
      KAFKA_NODE_ID: ${KAFKA_NODE_ID}
      KAFKA_CONTROLLER_QUORUM_VOTERS: ${KAFKA_CONTROLLER_QUORUM_VOTERS}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_CONTROLLER_LISTENER_NAMES: ${KAFKA_CONTROLLER_LISTENER_NAMES}
      KAFKA_LOG_DIRS: ${KAFKA_LOG_DIRS}
      CLUSTER_ID: ${CLUSTER_ID}
  postgres:
    build:
      context: .
      dockerfile: build/postgres/Dockerfile
    container_name: db
    ports:
      - "7777:5432"
    networks:
      - worknet
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  redis:
    image: redis:alpine
    container_name: cache
    ports:
      - "6379:6379"
    networks:
      - worknet
    volumes:
      - redis-data:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
