// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/insan1a/exile/internal/models"
)

// PeopleGetter is an autogenerated mock type for the PeopleGetter type
type PeopleGetter struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, filter
func (_m *PeopleGetter) Get(ctx context.Context, filter map[string]interface{}) ([]models.Person, error) {
	ret := _m.Called(ctx, filter)

	var r0 []models.Person
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, map[string]interface{}) ([]models.Person, error)); ok {
		return rf(ctx, filter)
	}
	if rf, ok := ret.Get(0).(func(context.Context, map[string]interface{}) []models.Person); ok {
		r0 = rf(ctx, filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Person)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, map[string]interface{}) error); ok {
		r1 = rf(ctx, filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPeopleGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewPeopleGetter creates a new instance of PeopleGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPeopleGetter(t mockConstructorTestingTNewPeopleGetter) *PeopleGetter {
	mock := &PeopleGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
